name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge,opensim-org,defaults
        channel-priority: strict
        activate-environment: test-env
    
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        conda env update --file environment.yml --name test-env
        conda activate test-env
        conda list
    
    - name: Install package in development mode
      shell: bash -l {0}
      run: |
        conda activate test-env
        pip install -e .
    
    - name: Run tests with coverage
      shell: bash -l {0}
      run: |
        conda activate test-env
        pytest --cov=src/movedb --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  quick-test:
    name: Quick Test (No Coverage)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: '3.11'
        channels: conda-forge,opensim-org,defaults
        channel-priority: strict
        activate-environment: quick-test-env
    
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        conda env update --file environment.yml --name quick-test-env
        conda activate quick-test-env
    
    - name: Install package
      shell: bash -l {0}
      run: |
        conda activate quick-test-env
        pip install -e .
    
    - name: Run quick tests
      shell: bash -l {0}
      run: |
        conda activate quick-test-env
        pytest --no-cov -v
